// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`implementation option 'dart-sass', 'legacy' API: errors 1`] = `[]`;

exports[`implementation option 'dart-sass', 'legacy' API: warnings 1`] = `[]`;

exports[`implementation option 'dart-sass', 'modern' API: errors 1`] = `[]`;

exports[`implementation option 'dart-sass', 'modern' API: warnings 1`] = `[]`;

exports[`implementation option 'node-sass', 'legacy' API: errors 1`] = `[]`;

exports[`implementation option 'node-sass', 'legacy' API: warnings 1`] = `[]`;

exports[`implementation option 'sass_string', 'legacy' API: errors 1`] = `[]`;

exports[`implementation option 'sass_string', 'legacy' API: warnings 1`] = `[]`;

exports[`implementation option 'sass-embedded', 'legacy' API: errors 1`] = `[]`;

exports[`implementation option 'sass-embedded', 'legacy' API: warnings 1`] = `[]`;

exports[`implementation option 'sass-embedded', 'modern' API: errors 1`] = `[]`;

exports[`implementation option 'sass-embedded', 'modern' API: warnings 1`] = `[]`;

exports[`implementation option not specify with legacy API: errors 1`] = `[]`;

exports[`implementation option not specify with legacy API: warnings 1`] = `[]`;

exports[`implementation option not specify with modern API: errors 1`] = `[]`;

exports[`implementation option not specify with modern API: warnings 1`] = `[]`;

exports[`implementation option not specify: errors 1`] = `[]`;

exports[`implementation option not specify: warnings 1`] = `[]`;

exports[`implementation option should not swallow an error when trying to load a sass implementation: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Some error",
]
`;

exports[`implementation option should not swallow an error when trying to load a sass implementation: warnings 1`] = `[]`;

exports[`implementation option should throw an error on an unknown sass implementation: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Error: Unknown Sass implementation "strange-sass".",
]
`;

exports[`implementation option should throw an error on an unknown sass implementation: warnings 1`] = `[]`;

exports[`implementation option should throw an error when the "info" is unparseable: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Error: Unknown Sass implementation "asdfj".",
]
`;

exports[`implementation option should throw an error when the "info" is unparseable: warnings 1`] = `[]`;

exports[`implementation option should throw error when the "info" does not exist: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Error: Unknown Sass implementation.",
]
`;

exports[`implementation option should throw error when the "info" does not exist: warnings 1`] = `[]`;

exports[`implementation option should throw error when unresolved package: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Error: Cannot find module 'unresolved' from 'src/utils.js'",
]
`;

exports[`implementation option should throw error when unresolved package: warnings 1`] = `[]`;

exports[`implementation option should try to load using valid order: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from ../src/cjs.js):
Some error sass",
]
`;

exports[`implementation option should try to load using valid order: warnings 1`] = `[]`;
