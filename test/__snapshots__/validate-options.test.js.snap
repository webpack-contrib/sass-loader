// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate options should throw an error on the "additionalData" option with "true" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.additionalData should be one of these:
   string | function
   -> Prepends/Appends \`Sass\`/\`SCSS\` code before the actual entry file.
   -> Read more at https://github.com/webpack-contrib/sass-loader#additionaldata
   Details:
    * options.additionalData should be a string.
    * options.additionalData should be an instance of function."
`;

exports[`validate options should throw an error on the "api" option with "string" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.api should be one of these:
   "legacy" | "modern"
   -> Switch between old and modern API for \`sass\` (\`Dart Sass\`) and \`Sass Embedded\` implementations.
   -> Read more at https://github.com/webpack-contrib/sass-loader#sassoptions"
`;

exports[`validate options should throw an error on the "api" option with "true" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.api should be one of these:
   "legacy" | "modern"
   -> Switch between old and modern API for \`sass\` (\`Dart Sass\`) and \`Sass Embedded\` implementations.
   -> Read more at https://github.com/webpack-contrib/sass-loader#sassoptions"
`;

exports[`validate options should throw an error on the "implementation" option with "() => {}" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.implementation should be one of these:
   string | object { … }
   -> The implementation of the sass to be used.
   -> Read more at https://github.com/webpack-contrib/sass-loader#implementation
   Details:
    * options.implementation should be a string.
    * options.implementation should be an object:
      object { … }"
`;

exports[`validate options should throw an error on the "implementation" option with "true" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.implementation should be one of these:
   string | object { … }
   -> The implementation of the sass to be used.
   -> Read more at https://github.com/webpack-contrib/sass-loader#implementation
   Details:
    * options.implementation should be a string.
    * options.implementation should be an object:
      object { … }"
`;

exports[`validate options should throw an error on the "sassOptions" option with "string" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.sassOptions should be one of these:
   object { … } | function
   -> Options for \`node-sass\` or \`sass\` (\`Dart Sass\`) implementation.
   -> Read more at https://github.com/webpack-contrib/sass-loader#sassoptions
   Details:
    * options.sassOptions should be an object:
      object { … }
    * options.sassOptions should be an instance of function."
`;

exports[`validate options should throw an error on the "sassOptions" option with "true" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.sassOptions should be one of these:
   object { … } | function
   -> Options for \`node-sass\` or \`sass\` (\`Dart Sass\`) implementation.
   -> Read more at https://github.com/webpack-contrib/sass-loader#sassoptions
   Details:
    * options.sassOptions should be an object:
      object { … }
    * options.sassOptions should be an instance of function."
`;

exports[`validate options should throw an error on the "sourceMap" option with "string" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.sourceMap should be a boolean.
   -> Enables/Disables generation of source maps.
   -> Read more at https://github.com/webpack-contrib/sass-loader#sourcemap"
`;

exports[`validate options should throw an error on the "unknown" option with "/test/" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "[]" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "{"foo":"bar"}" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "{}" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "1" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "false" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "test" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "unknown" option with "true" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options has an unknown property 'unknown'. These properties are valid:
   object { implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? }"
`;

exports[`validate options should throw an error on the "warnRuleAsWarning" option with "string" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.warnRuleAsWarning should be a boolean.
   -> Treats the '@warn' rule as a webpack warning.
   -> Read more at https://github.com/webpack-contrib/sass-loader#warnruleaswarning"
`;

exports[`validate options should throw an error on the "webpackImporter" option with "string" value 1`] = `
"Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.
 - options.webpackImporter should be a boolean.
   -> Enables/Disables default \`webpack\` importer.
   -> Read more at https://github.com/webpack-contrib/sass-loader#webpackimporter"
`;
