// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should don't use the "fibers" package when the "fiber" option is "false" (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "data" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should ignore the "file" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should respect the "outputStyle" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (sass): css 1`] = `"﻿@import\\"./file.css\\";body{font:100% Helvetica,sans-serif;color:#333}nav ul{margin:0;padding:0;list-style:none}nav li{display:inline-block}nav a{display:block;padding:6px 12px;text-decoration:none}.box{-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;border-radius:10px}.message,.warning,.error,.success{border:1px solid #ccc;padding:10px;color:#333}.success{border-color:green}.error{border-color:red}.warning{border-color:#ff0}.foo:before{content:\\"\\"}.bar:before{content:\\"∑\\"}"`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (scss): css 1`] = `"﻿@import\\"./file.css\\";body{font:100% Helvetica,sans-serif;color:#333}nav ul{margin:0;padding:0;list-style:none}nav li{display:inline-block}nav a{display:block;padding:6px 12px;text-decoration:none}.box{-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;border-radius:10px}.foo:before{content:\\"\\"}.bar:before{content:\\"∑\\"}"`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should use "compressed" output style in the "production" mode (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should use the "fibers" package if it is possible (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option is empty "Object" (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
          font: 100% Helvetica, sans-serif;
          color: #333;
}

nav ul {
          margin: 0;
          padding: 0;
          list-style: none;
}
nav li {
          display: inline-block;
}
nav a {
          display: block;
          padding: 6px 12px;
          text-decoration: none;
}

.box {
          -webkit-border-radius: 10px;
          -moz-border-radius: 10px;
          -ms-border-radius: 10px;
          border-radius: 10px;
}

.message, .warning, .error, .success {
          border: 1px solid #ccc;
          padding: 10px;
          color: #333;
}

.success {
          border-color: green;
}

.error {
          border-color: red;
}

.warning {
          border-color: yellow;
}

.foo:before {
          content: \\"\\\\e0c6\\";
}

.bar:before {
          content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
          font: 100% Helvetica, sans-serif;
          color: #333;
}

nav ul {
          margin: 0;
          padding: 0;
          list-style: none;
}
nav li {
          display: inline-block;
}
nav a {
          display: block;
          padding: 6px 12px;
          text-decoration: none;
}

.box {
          -webkit-border-radius: 10px;
          -moz-border-radius: 10px;
          -ms-border-radius: 10px;
          border-radius: 10px;
}

.foo:before {
          content: \\"\\\\e0c6\\";
}

.bar:before {
          content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Function" and never return (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
          font: 100% Helvetica, sans-serif;
          color: #333;
}

nav ul {
          margin: 0;
          padding: 0;
          list-style: none;
}
nav li {
          display: inline-block;
}
nav a {
          display: block;
          padding: 6px 12px;
          text-decoration: none;
}

.box {
          -webkit-border-radius: 10px;
          -moz-border-radius: 10px;
          -ms-border-radius: 10px;
          border-radius: 10px;
}

.message, .warning, .error, .success {
          border: 1px solid #ccc;
          padding: 10px;
          color: #333;
}

.success {
          border-color: green;
}

.error {
          border-color: red;
}

.warning {
          border-color: yellow;
}

.foo:before {
          content: \\"\\\\e0c6\\";
}

.bar:before {
          content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
          font: 100% Helvetica, sans-serif;
          color: #333;
}

nav ul {
          margin: 0;
          padding: 0;
          list-style: none;
}
nav li {
          display: inline-block;
}
nav a {
          display: block;
          padding: 6px 12px;
          text-decoration: none;
}

.box {
          -webkit-border-radius: 10px;
          -moz-border-radius: 10px;
          -ms-border-radius: 10px;
          border-radius: 10px;
}

.foo:before {
          content: \\"\\\\e0c6\\";
}

.bar:before {
          content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work when the option like "Object" (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "fiber" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (sass): css 1`] = `
"h2, h3, h4, h5 {
  color: #08c;
}"
`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (scss): css 1`] = `
"h2, h3, h4, h5 {
  color: #08c;
}"
`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "functions" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): css 1`] = `""`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): css 2`] = `
".a {
  color: red;
}

.b {
  color: blue;
}"
`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): errors 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (sass): warnings 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): css 1`] = `""`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): css 2`] = `
".a {
  color: red;
}

.b {
  color: blue;
}"
`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): errors 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a array of functions option (dart-sass) (scss): warnings 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): css 1`] = `""`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): css 2`] = `
".a {
  color: red;
}"
`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): errors 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (sass): warnings 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): css 1`] = `""`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): css 2`] = `
".a {
  color: red;
}"
`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): errors 2`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "importer" as a single function option (dart-sass) (scss): warnings 2`] = `Array []`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (sass): css 1`] = `
".include-path-module {
  background: hotpink;
}

._underscore-include-path-module {
  background: hotpink;
}"
`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (scss): css 1`] = `
".include-path-module {
  background: hotpink;
}

._underscore-include-path-module {
  background: hotpink;
}"
`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "includePaths" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
		font: 100% Helvetica, sans-serif;
		color: #333;
}

nav ul {
		margin: 0;
		padding: 0;
		list-style: none;
}
nav li {
		display: inline-block;
}
nav a {
		display: block;
		padding: 6px 12px;
		text-decoration: none;
}

.box {
		-webkit-border-radius: 10px;
		-moz-border-radius: 10px;
		-ms-border-radius: 10px;
		border-radius: 10px;
}

.message, .warning, .error, .success {
		border: 1px solid #ccc;
		padding: 10px;
		color: #333;
}

.success {
		border-color: green;
}

.error {
		border-color: red;
}

.warning {
		border-color: yellow;
}

.foo:before {
		content: \\"\\\\e0c6\\";
}

.bar:before {
		content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
		font: 100% Helvetica, sans-serif;
		color: #333;
}

nav ul {
		margin: 0;
		padding: 0;
		list-style: none;
}
nav li {
		display: inline-block;
}
nav a {
		display: block;
		padding: 6px 12px;
		text-decoration: none;
}

.box {
		-webkit-border-radius: 10px;
		-moz-border-radius: 10px;
		-ms-border-radius: 10px;
		border-radius: 10px;
}

.foo:before {
		content: \\"\\\\e0c6\\";
}

.bar:before {
		content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentType" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
    font: 100% Helvetica, sans-serif;
    color: #333;
}

nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
nav li {
    display: inline-block;
}
nav a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
}

.box {
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    border-radius: 10px;
}

.message, .warning, .error, .success {
    border: 1px solid #ccc;
    padding: 10px;
    color: #333;
}

.success {
    border-color: green;
}

.error {
    border-color: red;
}

.warning {
    border-color: yellow;
}

.foo:before {
    content: \\"\\\\e0c6\\";
}

.bar:before {
    content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
    font: 100% Helvetica, sans-serif;
    color: #333;
}

nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
nav li {
    display: inline-block;
}
nav a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
}

.box {
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    border-radius: 10px;
}

.foo:before {
    content: \\"\\\\e0c6\\";
}

.bar:before {
    content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentWidth" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "indentedSyntax" option (sass-embedded) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (dart-sass) (scss): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (sass): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.message, .warning, .error, .success {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (sass): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (sass): warnings 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (scss): css 1`] = `
"@charset \\"UTF-8\\";
@import \\"./file.css\\";
body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

.foo:before {
  content: \\"\\\\e0c6\\";
}

.bar:before {
  content: \\"∑\\";
}"
`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (scss): errors 1`] = `Array []`;

exports[`sassOptions option should work with the "linefeed" option (sass-embedded) (scss): warnings 1`] = `Array []`;
